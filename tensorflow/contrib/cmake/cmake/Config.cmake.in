@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/@TARGETS_EXPORT_NAME@.cmake")
check_required_components("@PROJECT_NAME@")

find_package(ZLIB CONFIG REQUIRED)        # ZLIB::zlib
find_package(giflib CONFIG REQUIRED)      # giflib::giflib
find_package(PNG CONFIG REQUIRED)         # PNG::png
find_package(Jpeg CONFIG REQUIRED)        # JPEG::jpeg
find_package(liblmdb CONFIG REQUIRED)     #  liblmdb::lmdb
find_package(Eigen3 CONFIG REQUIRED)      # Eigen3::Eigen
find_package(gemmlowp CONFIG REQUIRED)    # gemmlowp::gemmlowp
find_package(jsoncpp CONFIG REQUIRED)     # jsoncpp_lib_static
find_package(farmhash CONFIG REQUIRED)    # farmhash::farmhash
find_package(fft2d CONFIG REQUIRED)       # fft2d::fft2d
find_package(highwayhash CONFIG REQUIRED) # highwayhash::highwayhash
find_package(nsync CONFIG REQUIRED)       # nsync::nsync
find_package(Protobuf CONFIG REQUIRED)    # protobuf::libprotobuf
find_package(RE2 CONFIG REQUIRED)         # RE2::re2

if(@tensorflow_ENABLE_GPU@)
  find_package(cub CONFIG REQUIRED)
  find_package(CUDA @tensorflow_CUDA_VERSION@ REQUIRED)
  # TODO: How to handle find_library()
  # if(@tensorflow_USE_NCCL@)
  #   find_library(nccl_STATIC_LIBRARY NAMES libnccl_static.a PATHS ${tensorflow_PATH_NCCL_STATIC_LIB} ${CUDA_TOOLKIT_ROOT_DIR})
  # endif()
  # find_library(cudnn_STATIC_LIBRARY NAMES libcudnn_static.a PATHS ${tensorflow_PATH_CUDNN_STATIC_LIB} ${CUDA_TOOLKIT_ROOT_DIR})
  # find_library(culibos_STATIC_LIBRARY NAMES libculibos.a PATHS ${tensorflow_PATH_STATIC_LIB} ${CUDA_TOOLKIT_ROOT_DIR})
endif()

find_package(SQLite3 REQUIRED) # sqlite3

if(@tensorflow_ENABLE_SSL_SUPPORT@)
  find_package(BoringSSL CONFIG REQUIRED)
endif()

if(@tensorflow_ENABLE_GRPC_SUPPORT@)
  find_package(gRPC CONFIG REQUIRED)
endif()

if(@tensorflow_ENABLE_JEMALLOC_SUPPORT@)
  find_package(jemalloc CONFIG REQUIRED)
endif()

if(@tensorflow_ENABLE_SNAPPY_SUPPORT@)
  find_package(Snappy CONFIG REQUIRED)
endif()
